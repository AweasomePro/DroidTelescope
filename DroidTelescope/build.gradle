apply plugin: 'com.android.library'

android {
    compileSdkVersion 24
    buildToolsVersion "25.0.0"

    defaultConfig {
        minSdkVersion 23
        targetSdkVersion 24
        versionCode 1
        versionName "0.8.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:24.2.1'
    testCompile 'junit:junit:4.12'
}

//apply plugin: 'bintray-release'

//publish {
//    artifactId = 'DroidTelescope'
//    userOrg = rootProject.userOrg
//    groupId = rootProject.groupId
//    uploadName = rootProject.uploadName
//    publishVersion = rootProject.publishVersion
//    desc = rootProject.desc
//    website = rootProject.website
//    licences = rootProject.licences
//}

project.afterEvaluate {
    tasks.getByName("bundleRelease") {
        it.doLast {
            println("=====================start copy DroidTelescope.jar=========================")
            def fileName = "classes.jar"
            def fromFile = "./build/intermediates/bundles/default/" + fileName
            def intoFile = "../"

            def versionName = android.defaultConfig.versionName
            def time = new java.text.SimpleDateFormat("yyyyMMdd").format(new Date())

            def jarName = "DroidTelescope_v${versionName}_${time}.jar"

            // copy --> rename
            copy {
                from fromFile
                into intoFile

                rename {
                    jarName
                }
            }
        }
    }
}